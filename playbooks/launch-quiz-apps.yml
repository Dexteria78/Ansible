---
- name: Lancer les applications quiz sur tous les clients
  hosts: client1,client2,client3,client4
  become: yes
  gather_facts: no
  
  vars:
    app_directory: /opt/quiz-ansible
    app_port: 3000
    
  tasks:
    - name: V√©rifier si l'application est d√©j√† install√©e
      stat:
        path: "{{ app_directory }}/dist/index.html"
      register: app_installed
      
    - name: Arr√™ter les processus serve existants
      shell: pkill -f serve || true
      ignore_errors: yes
      when: app_installed.stat.exists
      
    - name: Attendre l'arr√™t des processus
      pause:
        seconds: 2
      when: app_installed.stat.exists
      
    - name: Lancer l'application en arri√®re-plan
      shell: |
        cd {{ app_directory }}
        nohup serve -s dist -p {{ app_port }} > /dev/null 2>&1 &
        echo "Application lanc√©e sur {{ inventory_hostname }}"
      register: launch_result
      when: app_installed.stat.exists
      
    - name: Afficher le r√©sultat du lancement
      debug:
        msg: "{{ launch_result.stdout }}"
      when: app_installed.stat.exists
      
    - name: Attendre le d√©marrage
      pause:
        seconds: 3
      when: app_installed.stat.exists
      
    - name: V√©rifier que l'application r√©pond
      uri:
        url: "http://{{ ansible_host }}:{{ app_port }}"
        method: GET
        timeout: 10
      register: app_check
      delegate_to: localhost
      when: app_installed.stat.exists
      
    - name: Afficher le statut de l'application
      debug:
        msg: |
          ‚úÖ Application {{ inventory_hostname }} : 
          URL: http://{{ ansible_host }}:{{ app_port }}
          Status: {{ app_check.status }}
      when: app_installed.stat.exists and app_check.status == 200
      
    - name: Afficher les applications non install√©es
      debug:
        msg: "‚ùå Application non install√©e sur {{ inventory_hostname }}"
      when: not app_installed.stat.exists
      
- name: R√©sum√© final et tests
  hosts: localhost
  gather_facts: no
  
  tasks:
    - name: Tester toutes les applications
      uri:
        url: "http://{{ item }}:3000"
        method: GET
        timeout: 10
      loop:
        - 172.18.0.4  # client1
        - 172.18.0.5  # client2
        - 172.18.0.3  # client3
        - 172.18.0.2  # client4
      register: all_tests
      ignore_errors: yes
      
    - name: Afficher le r√©sum√© final
      debug:
        msg: |
          üéâ R√âSUM√â FINAL - Applications Quiz Ansible
          
          {% for result in all_tests.results %}
          {% if result.status == 200 %}
          ‚úÖ {{ result.item }}:3000 - OK ({{ result.status }})
          {% else %}
          ‚ùå {{ result.item }}:3000 - ERREUR
          {% endif %}
          {% endfor %}
          
          üìã Commandes pour tester :
          curl http://172.18.0.4:3000
          curl http://172.18.0.5:3000
          curl http://172.18.0.3:3000
          curl http://172.18.0.2:3000
          
          üåê Ouvrir dans un navigateur :
          http://172.18.0.4:3000
          http://172.18.0.5:3000
          http://172.18.0.3:3000
          http://172.18.0.2:3000
